/*
 * VMaaS Webapp
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.32.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vmaas

import (
	"encoding/json"
)

// PkgListItem struct for PkgListItem
type PkgListItem struct {
	Nevra *string `json:"nevra,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Description *string `json:"description,omitempty"`
	Modified *string `json:"modified,omitempty"`
}

// NewPkgListItem instantiates a new PkgListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkgListItem() *PkgListItem {
	this := PkgListItem{}
	return &this
}

// NewPkgListItemWithDefaults instantiates a new PkgListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkgListItemWithDefaults() *PkgListItem {
	this := PkgListItem{}
	return &this
}

// GetNevra returns the Nevra field value if set, zero value otherwise.
func (o *PkgListItem) GetNevra() string {
	if o == nil || o.Nevra == nil {
		var ret string
		return ret
	}
	return *o.Nevra
}

// GetNevraOk returns a tuple with the Nevra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgListItem) GetNevraOk() (*string, bool) {
	if o == nil || o.Nevra == nil {
		return nil, false
	}
	return o.Nevra, true
}

// HasNevra returns a boolean if a field has been set.
func (o *PkgListItem) HasNevra() bool {
	if o != nil && o.Nevra != nil {
		return true
	}

	return false
}

// SetNevra gets a reference to the given string and assigns it to the Nevra field.
func (o *PkgListItem) SetNevra(v string) {
	o.Nevra = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *PkgListItem) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgListItem) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *PkgListItem) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *PkgListItem) SetSummary(v string) {
	o.Summary = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PkgListItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgListItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PkgListItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PkgListItem) SetDescription(v string) {
	o.Description = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *PkgListItem) GetModified() string {
	if o == nil || o.Modified == nil {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgListItem) GetModifiedOk() (*string, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *PkgListItem) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *PkgListItem) SetModified(v string) {
	o.Modified = &v
}

func (o PkgListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nevra != nil {
		toSerialize["nevra"] = o.Nevra
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	return json.Marshal(toSerialize)
}

type NullablePkgListItem struct {
	value *PkgListItem
	isSet bool
}

func (v NullablePkgListItem) Get() *PkgListItem {
	return v.value
}

func (v *NullablePkgListItem) Set(val *PkgListItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePkgListItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePkgListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkgListItem(val *PkgListItem) *NullablePkgListItem {
	return &NullablePkgListItem{value: val, isSet: true}
}

func (v NullablePkgListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkgListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


