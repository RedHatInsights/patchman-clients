/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// CanonicalFactsIn struct for CanonicalFactsIn
type CanonicalFactsIn struct {
	InsightsId string `json:"insights_id"`
	SubscriptionManagerId string `json:"subscription_manager_id"`
	SatelliteId string `json:"satellite_id"`
	BiosUuid string `json:"bios_uuid"`
	IpAddresses []string `json:"ip_addresses"`
	Fqdn string `json:"fqdn"`
	MacAddresses []string `json:"mac_addresses"`
	ProviderId string `json:"provider_id"`
	ProviderType string `json:"provider_type"`
}

// NewCanonicalFactsIn instantiates a new CanonicalFactsIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCanonicalFactsIn(insightsId string, subscriptionManagerId string, satelliteId string, biosUuid string, ipAddresses []string, fqdn string, macAddresses []string, providerId string, providerType string, ) *CanonicalFactsIn {
	this := CanonicalFactsIn{}
	this.InsightsId = insightsId
	this.SubscriptionManagerId = subscriptionManagerId
	this.SatelliteId = satelliteId
	this.BiosUuid = biosUuid
	this.IpAddresses = ipAddresses
	this.Fqdn = fqdn
	this.MacAddresses = macAddresses
	this.ProviderId = providerId
	this.ProviderType = providerType
	return &this
}

// NewCanonicalFactsInWithDefaults instantiates a new CanonicalFactsIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCanonicalFactsInWithDefaults() *CanonicalFactsIn {
	this := CanonicalFactsIn{}
	return &this
}

// GetInsightsId returns the InsightsId field value
func (o *CanonicalFactsIn) GetInsightsId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InsightsId
}

// GetInsightsIdOk returns a tuple with the InsightsId field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetInsightsIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InsightsId, true
}

// SetInsightsId sets field value
func (o *CanonicalFactsIn) SetInsightsId(v string) {
	o.InsightsId = v
}

// GetSubscriptionManagerId returns the SubscriptionManagerId field value
func (o *CanonicalFactsIn) GetSubscriptionManagerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubscriptionManagerId
}

// GetSubscriptionManagerIdOk returns a tuple with the SubscriptionManagerId field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetSubscriptionManagerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubscriptionManagerId, true
}

// SetSubscriptionManagerId sets field value
func (o *CanonicalFactsIn) SetSubscriptionManagerId(v string) {
	o.SubscriptionManagerId = v
}

// GetSatelliteId returns the SatelliteId field value
func (o *CanonicalFactsIn) GetSatelliteId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SatelliteId
}

// GetSatelliteIdOk returns a tuple with the SatelliteId field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetSatelliteIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SatelliteId, true
}

// SetSatelliteId sets field value
func (o *CanonicalFactsIn) SetSatelliteId(v string) {
	o.SatelliteId = v
}

// GetBiosUuid returns the BiosUuid field value
func (o *CanonicalFactsIn) GetBiosUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BiosUuid
}

// GetBiosUuidOk returns a tuple with the BiosUuid field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetBiosUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BiosUuid, true
}

// SetBiosUuid sets field value
func (o *CanonicalFactsIn) SetBiosUuid(v string) {
	o.BiosUuid = v
}

// GetIpAddresses returns the IpAddresses field value
func (o *CanonicalFactsIn) GetIpAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetIpAddressesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddresses, true
}

// SetIpAddresses sets field value
func (o *CanonicalFactsIn) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetFqdn returns the Fqdn field value
func (o *CanonicalFactsIn) GetFqdn() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetFqdnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fqdn, true
}

// SetFqdn sets field value
func (o *CanonicalFactsIn) SetFqdn(v string) {
	o.Fqdn = v
}

// GetMacAddresses returns the MacAddresses field value
func (o *CanonicalFactsIn) GetMacAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.MacAddresses
}

// GetMacAddressesOk returns a tuple with the MacAddresses field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetMacAddressesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MacAddresses, true
}

// SetMacAddresses sets field value
func (o *CanonicalFactsIn) SetMacAddresses(v []string) {
	o.MacAddresses = v
}

// GetProviderId returns the ProviderId field value
func (o *CanonicalFactsIn) GetProviderId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetProviderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *CanonicalFactsIn) SetProviderId(v string) {
	o.ProviderId = v
}

// GetProviderType returns the ProviderType field value
func (o *CanonicalFactsIn) GetProviderType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value
// and a boolean to check if the value has been set.
func (o *CanonicalFactsIn) GetProviderTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderType, true
}

// SetProviderType sets field value
func (o *CanonicalFactsIn) SetProviderType(v string) {
	o.ProviderType = v
}

func (o CanonicalFactsIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["insights_id"] = o.InsightsId
	}
	if true {
		toSerialize["subscription_manager_id"] = o.SubscriptionManagerId
	}
	if true {
		toSerialize["satellite_id"] = o.SatelliteId
	}
	if true {
		toSerialize["bios_uuid"] = o.BiosUuid
	}
	if true {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	if true {
		toSerialize["fqdn"] = o.Fqdn
	}
	if true {
		toSerialize["mac_addresses"] = o.MacAddresses
	}
	if true {
		toSerialize["provider_id"] = o.ProviderId
	}
	if true {
		toSerialize["provider_type"] = o.ProviderType
	}
	return json.Marshal(toSerialize)
}

type NullableCanonicalFactsIn struct {
	value *CanonicalFactsIn
	isSet bool
}

func (v NullableCanonicalFactsIn) Get() *CanonicalFactsIn {
	return v.value
}

func (v *NullableCanonicalFactsIn) Set(val *CanonicalFactsIn) {
	v.value = val
	v.isSet = true
}

func (v NullableCanonicalFactsIn) IsSet() bool {
	return v.isSet
}

func (v *NullableCanonicalFactsIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCanonicalFactsIn(val *CanonicalFactsIn) *NullableCanonicalFactsIn {
	return &NullableCanonicalFactsIn{value: val, isSet: true}
}

func (v NullableCanonicalFactsIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCanonicalFactsIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


