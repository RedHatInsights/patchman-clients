/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// SystemProfileMssql Object containing data specific to the MS SQL workload
type SystemProfileMssql struct {
	// MSSQL version number
	Version *string `json:"version,omitempty"`
}

// NewSystemProfileMssql instantiates a new SystemProfileMssql object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemProfileMssql() *SystemProfileMssql {
	this := SystemProfileMssql{}
	return &this
}

// NewSystemProfileMssqlWithDefaults instantiates a new SystemProfileMssql object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemProfileMssqlWithDefaults() *SystemProfileMssql {
	this := SystemProfileMssql{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SystemProfileMssql) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemProfileMssql) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SystemProfileMssql) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SystemProfileMssql) SetVersion(v string) {
	o.Version = &v
}

func (o SystemProfileMssql) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableSystemProfileMssql struct {
	value *SystemProfileMssql
	isSet bool
}

func (v NullableSystemProfileMssql) Get() *SystemProfileMssql {
	return v.value
}

func (v *NullableSystemProfileMssql) Set(val *SystemProfileMssql) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemProfileMssql) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemProfileMssql) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemProfileMssql(val *SystemProfileMssql) *NullableSystemProfileMssql {
	return &NullableSystemProfileMssql{value: val, isSet: true}
}

func (v NullableSystemProfileMssql) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemProfileMssql) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


