/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// TagsOutAllOf struct for TagsOutAllOf
type TagsOutAllOf struct {
	// The list of tags on the systems
	Results *map[string][]StructuredTag `json:"results,omitempty"`
}

// NewTagsOutAllOf instantiates a new TagsOutAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagsOutAllOf() *TagsOutAllOf {
	this := TagsOutAllOf{}
	return &this
}

// NewTagsOutAllOfWithDefaults instantiates a new TagsOutAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagsOutAllOfWithDefaults() *TagsOutAllOf {
	this := TagsOutAllOf{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *TagsOutAllOf) GetResults() map[string][]StructuredTag {
	if o == nil || o.Results == nil {
		var ret map[string][]StructuredTag
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagsOutAllOf) GetResultsOk() (*map[string][]StructuredTag, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *TagsOutAllOf) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given map[string][]StructuredTag and assigns it to the Results field.
func (o *TagsOutAllOf) SetResults(v map[string][]StructuredTag) {
	o.Results = &v
}

func (o TagsOutAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableTagsOutAllOf struct {
	value *TagsOutAllOf
	isSet bool
}

func (v NullableTagsOutAllOf) Get() *TagsOutAllOf {
	return v.value
}

func (v *NullableTagsOutAllOf) Set(val *TagsOutAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTagsOutAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTagsOutAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagsOutAllOf(val *TagsOutAllOf) *NullableTagsOutAllOf {
	return &NullableTagsOutAllOf{value: val, isSet: true}
}

func (v NullableTagsOutAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagsOutAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


