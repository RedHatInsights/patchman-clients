/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// PerReporterStaleness struct for PerReporterStaleness
type PerReporterStaleness struct {
	CheckInSucceeded *bool `json:"check_in_succeeded,omitempty"`
	LastCheckIn *string `json:"last_check_in,omitempty"`
	StaleTimestamp *string `json:"stale_timestamp,omitempty"`
}

// NewPerReporterStaleness instantiates a new PerReporterStaleness object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerReporterStaleness() *PerReporterStaleness {
	this := PerReporterStaleness{}
	return &this
}

// NewPerReporterStalenessWithDefaults instantiates a new PerReporterStaleness object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerReporterStalenessWithDefaults() *PerReporterStaleness {
	this := PerReporterStaleness{}
	return &this
}

// GetCheckInSucceeded returns the CheckInSucceeded field value if set, zero value otherwise.
func (o *PerReporterStaleness) GetCheckInSucceeded() bool {
	if o == nil || o.CheckInSucceeded == nil {
		var ret bool
		return ret
	}
	return *o.CheckInSucceeded
}

// GetCheckInSucceededOk returns a tuple with the CheckInSucceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerReporterStaleness) GetCheckInSucceededOk() (*bool, bool) {
	if o == nil || o.CheckInSucceeded == nil {
		return nil, false
	}
	return o.CheckInSucceeded, true
}

// HasCheckInSucceeded returns a boolean if a field has been set.
func (o *PerReporterStaleness) HasCheckInSucceeded() bool {
	if o != nil && o.CheckInSucceeded != nil {
		return true
	}

	return false
}

// SetCheckInSucceeded gets a reference to the given bool and assigns it to the CheckInSucceeded field.
func (o *PerReporterStaleness) SetCheckInSucceeded(v bool) {
	o.CheckInSucceeded = &v
}

// GetLastCheckIn returns the LastCheckIn field value if set, zero value otherwise.
func (o *PerReporterStaleness) GetLastCheckIn() string {
	if o == nil || o.LastCheckIn == nil {
		var ret string
		return ret
	}
	return *o.LastCheckIn
}

// GetLastCheckInOk returns a tuple with the LastCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerReporterStaleness) GetLastCheckInOk() (*string, bool) {
	if o == nil || o.LastCheckIn == nil {
		return nil, false
	}
	return o.LastCheckIn, true
}

// HasLastCheckIn returns a boolean if a field has been set.
func (o *PerReporterStaleness) HasLastCheckIn() bool {
	if o != nil && o.LastCheckIn != nil {
		return true
	}

	return false
}

// SetLastCheckIn gets a reference to the given string and assigns it to the LastCheckIn field.
func (o *PerReporterStaleness) SetLastCheckIn(v string) {
	o.LastCheckIn = &v
}

// GetStaleTimestamp returns the StaleTimestamp field value if set, zero value otherwise.
func (o *PerReporterStaleness) GetStaleTimestamp() string {
	if o == nil || o.StaleTimestamp == nil {
		var ret string
		return ret
	}
	return *o.StaleTimestamp
}

// GetStaleTimestampOk returns a tuple with the StaleTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerReporterStaleness) GetStaleTimestampOk() (*string, bool) {
	if o == nil || o.StaleTimestamp == nil {
		return nil, false
	}
	return o.StaleTimestamp, true
}

// HasStaleTimestamp returns a boolean if a field has been set.
func (o *PerReporterStaleness) HasStaleTimestamp() bool {
	if o != nil && o.StaleTimestamp != nil {
		return true
	}

	return false
}

// SetStaleTimestamp gets a reference to the given string and assigns it to the StaleTimestamp field.
func (o *PerReporterStaleness) SetStaleTimestamp(v string) {
	o.StaleTimestamp = &v
}

func (o PerReporterStaleness) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CheckInSucceeded != nil {
		toSerialize["check_in_succeeded"] = o.CheckInSucceeded
	}
	if o.LastCheckIn != nil {
		toSerialize["last_check_in"] = o.LastCheckIn
	}
	if o.StaleTimestamp != nil {
		toSerialize["stale_timestamp"] = o.StaleTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullablePerReporterStaleness struct {
	value *PerReporterStaleness
	isSet bool
}

func (v NullablePerReporterStaleness) Get() *PerReporterStaleness {
	return v.value
}

func (v *NullablePerReporterStaleness) Set(val *PerReporterStaleness) {
	v.value = val
	v.isSet = true
}

func (v NullablePerReporterStaleness) IsSet() bool {
	return v.isSet
}

func (v *NullablePerReporterStaleness) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerReporterStaleness(val *PerReporterStaleness) *NullablePerReporterStaleness {
	return &NullablePerReporterStaleness{value: val, isSet: true}
}

func (v NullablePerReporterStaleness) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerReporterStaleness) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


