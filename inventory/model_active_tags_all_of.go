/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// ActiveTagsAllOf struct for ActiveTagsAllOf
type ActiveTagsAllOf struct {
	Results []ActiveTag `json:"results"`
}

// NewActiveTagsAllOf instantiates a new ActiveTagsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveTagsAllOf(results []ActiveTag, ) *ActiveTagsAllOf {
	this := ActiveTagsAllOf{}
	this.Results = results
	return &this
}

// NewActiveTagsAllOfWithDefaults instantiates a new ActiveTagsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveTagsAllOfWithDefaults() *ActiveTagsAllOf {
	this := ActiveTagsAllOf{}
	return &this
}

// GetResults returns the Results field value
func (o *ActiveTagsAllOf) GetResults() []ActiveTag {
	if o == nil  {
		var ret []ActiveTag
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *ActiveTagsAllOf) GetResultsOk() (*[]ActiveTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *ActiveTagsAllOf) SetResults(v []ActiveTag) {
	o.Results = v
}

func (o ActiveTagsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableActiveTagsAllOf struct {
	value *ActiveTagsAllOf
	isSet bool
}

func (v NullableActiveTagsAllOf) Get() *ActiveTagsAllOf {
	return v.value
}

func (v *NullableActiveTagsAllOf) Set(val *ActiveTagsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveTagsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveTagsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveTagsAllOf(val *ActiveTagsAllOf) *NullableActiveTagsAllOf {
	return &NullableActiveTagsAllOf{value: val, isSet: true}
}

func (v NullableActiveTagsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveTagsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


